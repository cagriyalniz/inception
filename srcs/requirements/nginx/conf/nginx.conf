# nginx'de kullanılan olay modülünün ayarlarının belirtildiği bir bloktur.
# Bu modül, Nginx sunucusunun kullanabileceği iş parçacığı sayısını ve bağlantı sınırını belirleyebilir.
# Boş bırakıldığında, Varsayılan ayarlar kullanılır.
events {}

http{
        # mime.types dosyasini nginx yapilandirma dosyasina dahil eder
        # bu dosya belirli dosya turlerinin MIME turlerine tanimlar
        # MIME turleri bir dosyanin iceriginin turunu belirtir ve web sunuculari, web tarayicilarina dosya turunu bildirmek icin kullanir// html vs
        include /etc/nginx/mime.types;
    server{
        # nginx sunucusunun 443 numarali port uzerinde SSL/TLS protokolunu kullanarak istekleri dinleyecegini belirtir
        # sunucuya gelen HTTPS isteklerini karsilayacagi anlamina gelir
        listen 443 ssl;
            # IPv6 adresini kullanarak 443 numaralı porttan SSL/TLS trafiğini dinler.
            listen [::]:443 ssl;
            # sunucunun hangi domain adı veya IP adresiyle istekleri kabul edeceğini belirtir. DOMAIN_NAME kısmı,example.com alan adı ile değiştirilir.
            server_name DOMAIN_NAME;
            # SSL/TLS şifreleme protokollerini kullanarak güvenli bir bağlantı kurulması gerektiğini belirtir. Bu sayede istemciler ve sunucu arasındaki veriler şifrelenerek güvence altına alınır.
        ssl on;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /etc/ssl/certs/nginx.crt;
	    ssl_certificate_key /etc/ssl/private/nginx.key;

            #  eğer kullanıcı HTTPS yerine HTTP ile siteye bağlanmaya çalışırsa, trafiği HTTPS'e yönlendirmek için kullanılır.
            #  if bloğunda $scheme değişkeni kontrol edilir ve eğer HTTP ise return ile 301 kodlu bir yönlendirme yapılır ve kullanıcı HTTPS ile siteye yönlendirilir.
            #  Bu, site trafiğinin şifrelenmesini sağlamak ve güvenliğini artırmak için
        if ($scheme != "https"){
            return 301 https://$server_name$request_uri;
        }
        #  nginx'in statik dosyaları sunmak için kullanacağı kök dizinin yolunu belirtir.
        root /var/www/wordpress;
        #  belirtilen dizinde varsayılan olarak sunulacak dosya adını belirler. 
        #  Örneğin, bir kullanıcı "domain.com" adresini ziyaret ettiğinde,
        #  sunucu varsayılan olarak "index.php" dosyasını sunacak ve bu dosyanın yolu da "root" direktifinde belirtilen "/var/www/wordpress" dizini altında olacaktır.
        index index.php;
        location / {
            try_files $uri $uri/ =404;
        }
        # Nginx sunucusunun belirli bir URL kalıbına (location ~ \.php$) karşılık gelen PHP betiği 
        # isteklerini, PHP-FPM sunucusuna (fastcgi_pass) yönlendirir.
        # Ayrıca, snippets/fastcgi-php.conf dosyasını da dahil ederek, PHP-FPM sunucusuyla uyumlu bir şekilde çalışacak olan Nginx'in FastCGI ayarlarını yapılandırır.
        # fastcgi_pass parametresinde wordpress:9000 yer alıyor, bu da 
        # Nginx sunucusunun PHP-FPM sunucusuna hangi adrese ve porta bağlanması gerektiğini belirtir.
        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass wordpress:9000;
        }

    }
}